/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fronteira;

import persistencia.AgendamentoDAO;
import entidade.Agendamento;
import entidade.Paciente;
import entidade.Servico;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import persistencia.PacienteDAO;
import persistencia.ServicoDAO;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import persistencia.VerificarUsuarioDAO;
/**
 *
 * @author joao-
 */
public class frmCadastraAgendamento extends javax.swing.JFrame {

    
    
    public String Nome, Servico;
    
    
    private String[] colunas = new String[]{"Codigo","Nome",
           "Valor"};
    
    private DefaultTableModel tmServicos = new DefaultTableModel
               (null, colunas);
    
    private List<Servico> listaServicos;
    private ListSelectionModel lsmServicos;
    
    
    private String[] colunaspaciente = new String[]{"Codigo","Nome",
           "Endereço","Telefone"};
    
    private DefaultTableModel tmPacientes = new DefaultTableModel
               (null, colunaspaciente);
    
    private List<Paciente> listaPacientes;
    private ListSelectionModel lsmPacientes; 
    
    /**
     * Creates new form frmCadastraAgendamento
     */
    public frmCadastraAgendamento() {
        initComponents();
        txtData.setCalendar(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomePaciente = new javax.swing.JTextField();
        txtCPFPaciente = new javax.swing.JTextField();
        txtNomeServico = new javax.swing.JTextField();
        txtValorServico = new javax.swing.JTextField();
        txtRecebeHora = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPesquisaPaciente = new javax.swing.JTextField();
        btnNovoCliente = new javax.swing.JButton();
        btnPesquisarPaciente = new javax.swing.JButton();
        btnPesquisarServico = new javax.swing.JButton();
        btnNovoServico = new javax.swing.JButton();
        txtPesquisaServicos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblServico = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPaciente = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        txtData = new com.toedter.calendar.JDateChooser();
        txtHorario = new javax.swing.JFormattedTextField();
        lblSair = new javax.swing.JLabel();

        txtValorServico.setText("jTextField1");

        txtRecebeHora.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219), 2));
        txtRecebeHora.setForeground(new java.awt.Color(0, 73, 125));
        try {
            txtRecebeHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtRecebeHora.setToolTipText("  ");
        txtRecebeHora.setCaretColor(new java.awt.Color(0, 73, 125));
        txtRecebeHora.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendamentos");
        setUndecorated(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 73, 125));
        jLabel1.setText("Paciente:");

        jLabel2.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 73, 125));
        jLabel2.setText("CADASTRO DE AGENDAMENTO");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 73, 125));
        jLabel3.setText("Serviço:");

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 73, 125));
        jLabel4.setText("Horário:");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 73, 125));
        jLabel5.setText("Data:");

        txtPesquisaPaciente.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txtPesquisaPaciente.setForeground(new java.awt.Color(0, 73, 125));
        txtPesquisaPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219), 2));
        txtPesquisaPaciente.setCaretColor(new java.awt.Color(0, 73, 125));

        btnNovoCliente.setBackground(new java.awt.Color(0, 155, 219));
        btnNovoCliente.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnNovoCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnNovoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Inserir.png"))); // NOI18N
        btnNovoCliente.setText("Novo Paciente");
        btnNovoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnPesquisarPaciente.setBackground(new java.awt.Color(0, 155, 219));
        btnPesquisarPaciente.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnPesquisarPaciente.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Pesquisar.png"))); // NOI18N
        btnPesquisarPaciente.setText("Pesquisar Paciente");
        btnPesquisarPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnPesquisarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPacienteActionPerformed(evt);
            }
        });

        btnPesquisarServico.setBackground(new java.awt.Color(0, 155, 219));
        btnPesquisarServico.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnPesquisarServico.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisarServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Pesquisar.png"))); // NOI18N
        btnPesquisarServico.setText("Pesquisar Serviço");
        btnPesquisarServico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnPesquisarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarServicoActionPerformed(evt);
            }
        });

        btnNovoServico.setBackground(new java.awt.Color(0, 155, 219));
        btnNovoServico.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnNovoServico.setForeground(new java.awt.Color(255, 255, 255));
        btnNovoServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Inserir.png"))); // NOI18N
        btnNovoServico.setText("Novo Serviço");
        btnNovoServico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnNovoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoServicoActionPerformed(evt);
            }
        });

        txtPesquisaServicos.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txtPesquisaServicos.setForeground(new java.awt.Color(0, 73, 125));
        txtPesquisaServicos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219), 2));
        txtPesquisaServicos.setCaretColor(new java.awt.Color(0, 73, 125));

        tblServico.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        tblServico.setModel(tmServicos);
        tblServico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmServicos = tblServico.getSelectionModel();
        lsmServicos.addListSelectionListener (new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (! e.getValueIsAdjusting()) {
                    tblServicoLinhaSelecionada(tblServico);
                }
            }

        });
        jScrollPane1.setViewportView(tblServico);

        tblPaciente.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        tblPaciente.setModel(tmPacientes);
        tblPaciente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmPacientes = tblPaciente.getSelectionModel();
        lsmPacientes.addListSelectionListener (new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (! e.getValueIsAdjusting()) {
                    tblPacienteLinhaSelecionada(tblPaciente);
                }
            }

        });
        jScrollPane2.setViewportView(tblPaciente);

        btnCancelar.setBackground(new java.awt.Color(0, 155, 219));
        btnCancelar.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Cancelar IMG - Sistema.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCadastrar.setBackground(new java.awt.Color(0, 155, 219));
        btnCadastrar.setFont(new java.awt.Font("Open Sans", 0, 11)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fronteira/imgs/Salvar.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219)));
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219), 2));
        txtData.setForeground(new java.awt.Color(0, 73, 125));

        txtHorario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 219), 2));
        txtHorario.setForeground(new java.awt.Color(0, 73, 125));
        try {
            txtHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:## horas")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHorario.setToolTipText("  ");
        txtHorario.setCaretColor(new java.awt.Color(0, 73, 125));
        txtHorario.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N

        lblSair.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        lblSair.setForeground(new java.awt.Color(0, 73, 125));
        lblSair.setText("X");
        lblSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSairMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(346, 346, 346))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtPesquisaPaciente, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPesquisarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCadastrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtHorario))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPesquisaServicos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnNovoServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPesquisarServico, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSair)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPesquisarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisaServicos, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarServico, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        // TODO add your handling code here:
        new frmPaciente().setVisible(true);
        frmPesquisarPaciente pe =  new frmPesquisarPaciente();
        pe.setVisible(false);
        
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnNovoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoServicoActionPerformed
        // TODO add your handling code here:
        new frmCadastraServico().setVisible(true);
        frmPesquisaServico pe = new frmPesquisaServico();
        pe.setVisible(false);
    }//GEN-LAST:event_btnNovoServicoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        frmAgendamento pu  = new frmAgendamento();
        pu.setVisible(true);;
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarServicoActionPerformed
        // TODO add your handling code here:
        
        listarServicos();
    }//GEN-LAST:event_btnPesquisarServicoActionPerformed

    private void btnPesquisarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPacienteActionPerformed
        // TODO add your handling code here:
        
        listarPacientes();
    }//GEN-LAST:event_btnPesquisarPacienteActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        cadastrarAgendamento();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void lblSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSairMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_lblSairMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmCadastraAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmCadastraAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmCadastraAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmCadastraAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCadastraAgendamento().setVisible(true);
               
            }
        });
    }
    
    
    
    private void cadastrarAgendamento(){
        
        
        if(txtNomePaciente.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(null,"Você precisa selecionar um nome para agendamento","Selecionar Nome",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        else if(txtNomeServico.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(null,"Você precisa selecionar um serviço para agendamento","Selecionar Serviço",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        else if(txtHorario.getText().equals("  :   horas")){
            
            JOptionPane.showMessageDialog(null,"Você precisa selecionar um horário para agendamento","Selecionar Horário",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        else if(txtData.getCalendar()==null){
          
            JOptionPane.showMessageDialog(null,"Você precisa selecionar uma data para agendamento","Selecionar Data",
                    JOptionPane.INFORMATION_MESSAGE);
            
        }else{
        
        Date data = txtData.getDate();
        SimpleDateFormat formatador = new SimpleDateFormat("yyyy/MM/dd");
        String novaData = formatador.format(data);   
            
        VerificarUsuarioDAO verificarDAO = new  VerificarUsuarioDAO();
        
        String hora = txtHorario.getText();
        String date = txtData.getDateFormatString().format(novaData);
 
        boolean resposta = verificarDAO.verificaAgendamento(hora, date);
        
        if(resposta == true){    
           
            JOptionPane.showMessageDialog(null,"Já existe um paciente marcado para esse dia e horário !","Cadastro de Agendamento",
                JOptionPane.INFORMATION_MESSAGE);
        
      
        }else{
            
        Agendamento agendamento = new  Agendamento();
        
        agendamento.setNome(txtNomePaciente.getText().trim());
        agendamento.setCpf(txtCPFPaciente.getText().trim());
        agendamento.setServico(txtNomeServico.getText().trim());
        agendamento.setValor(txtValorServico.getText().trim());
        agendamento.setHorario(txtHorario.getText().trim());
        agendamento.setData((txtData.getDateFormatString()).format(novaData));
        
        AgendamentoDAO agendamentoDAO = new AgendamentoDAO();
        agendamentoDAO.cadastrarAgendamento(agendamento);
        JOptionPane.showMessageDialog(null,"Agendamento Cadastrado com sucesso !","Cadastro de Agendamento",
                JOptionPane.INFORMATION_MESSAGE);
        
        frmAgendamento pes = new frmAgendamento();
        
        String n = txtNomePaciente.getText();
       
        pes.listaAgendamentos = agendamentoDAO.listarAgendamentos("%"+
             n + "%");
        pes.mostrarAgendamentos(pes.listaAgendamentos);
        pes.listarAgendamentos();
        dispose();
        pes.setVisible(true);
        }
}
    }
    
     private void mostrarServicos(List<Servico> servicos){
        
        while (tmServicos.getRowCount() > 0){
            tmServicos.removeRow(0);
        }
        if(servicos.size() == 0){
            JOptionPane.showMessageDialog(this, "Nenhum Serviço foi encontrado!");
        }else{
            
            for (int i = 0; i < servicos.size(); i++){
                tmServicos.addRow(colunas);
                tmServicos.setValueAt(servicos.get(i).getCodigo(), i,0);
                tmServicos.setValueAt(servicos.get(i).getNome(), i,1);
                tmServicos.setValueAt(servicos.get(i).getValor(), i,2);
                                
            }
        }
    }
    
     private void listarServicos(){
        
        ServicoDAO servicoDAO =  new ServicoDAO();
        listaServicos = servicoDAO.listarServicos("%"
             +txtPesquisaServicos.getText().trim() + "%");
        mostrarServicos(listaServicos);
        
    }

      private void mostrarPacientes(List<Paciente> pacientes){
        
        while (tmPacientes.getRowCount() > 0){
            tmPacientes.removeRow(0);
        }
        if(pacientes.size() == 0){
            JOptionPane.showMessageDialog(this, "Nenhum Paciente foi encontrado!");
        }else{
            
            for (int i = 0; i < pacientes.size(); i++){
                tmPacientes.addRow(colunaspaciente);
                tmPacientes.setValueAt(pacientes.get(i).getCodigo(), i,0);
                tmPacientes.setValueAt(pacientes.get(i).getNome(), i,1);
                tmPacientes.setValueAt(pacientes.get(i).getRua(), i,2);
                tmPacientes.setValueAt(pacientes.get(i).getTelefone(), i,3);
                
            }
        }
    }
     
     private void listarPacientes(){
        
        PacienteDAO pacienteDAO =  new PacienteDAO();
        listaPacientes = pacienteDAO.listarPacientes("%"
             +txtPesquisaPaciente.getText().trim() + "%");
        mostrarPacientes(listaPacientes);
        
    }
     
     
       public void tblPacienteLinhaSelecionada(JTable tbl){
        
            int linhaSelecionada = tbl.getSelectedRow();
          
             if (linhaSelecionada != -1){
            
             txtNomePaciente.setText(listaPacientes.get(linhaSelecionada).getNome());
             txtCPFPaciente.setText(listaPacientes.get(linhaSelecionada).getCpf());
                 }
        }
     
       public void tblServicoLinhaSelecionada(JTable tbl){
        
            int linhaSelecionada = tbl.getSelectedRow();
          
             if (linhaSelecionada != -1){
            
             txtNomeServico.setText(listaServicos.get(linhaSelecionada).getNome());
             txtValorServico.setText(listaServicos.get(linhaSelecionada).getValor());
                 }
        }
       
       
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnNovoServico;
    private javax.swing.JButton btnPesquisarPaciente;
    private javax.swing.JButton btnPesquisarServico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSair;
    private javax.swing.JTable tblPaciente;
    private javax.swing.JTable tblServico;
    private javax.swing.JTextField txtCPFPaciente;
    private com.toedter.calendar.JDateChooser txtData;
    private javax.swing.JFormattedTextField txtHorario;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtNomeServico;
    private javax.swing.JTextField txtPesquisaPaciente;
    private javax.swing.JTextField txtPesquisaServicos;
    private javax.swing.JFormattedTextField txtRecebeHora;
    private javax.swing.JTextField txtValorServico;
    // End of variables declaration//GEN-END:variables
}
